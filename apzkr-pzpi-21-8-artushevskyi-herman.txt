1	ВСТУП
1.1	Огляд ПЗ


Проект із темою "Програмна система для оренди та керування дроном" є  системою, що надає користувачу доступ до управління дроном, отримання фото та відео за допомогою бортових систем.
Програмна система складається із декількох частин: серверна частина, IoT частина, мобільний додаток та веб сторінка.
Серверна частина надає змогу користувачу звертатись до системи за допомогою API та обслуговує інші сервіси. Вона являє собою центральну систему між усіма іншими додатками. Надає змогу іншим частинам комунікувати із IoT пристроями.
Мобільний застосунок надає користувачу змогу отримувати послуги програмної системи у будь-який момент за допомогою зручного інтерфейсу. Він надає змогу орендувати та керувати дроном у будь-який час за допомогою телефону.
Веб додаток надає змогу використовувати програмну систему на будь-якому пристрої. Веб додаток відповідає за адміністрування системи та надання послуг користувачам.
IoT пристрій – це основний компонент системи, саме він відповідає за управління дроном, керування дроном, зв’язок дрону із серверною частиною. Він комунікує із серверною частиною за допомогою технології MQTT.
Усі частини пов’язані із собою та постійно обмінюються даними. Користувач має доступ до системи за допомогою веб застосунку, або мобільного застосунку.

	1.2	Мета


	У сучасному світі з’являється все більше і більше потреби на автоматизацію робочих процесів. З’являється все більше потреби на використання дронів у повсякденних задачах. Наприклад, компанії починають використовувати дрони для доставки товарів, що значно покращує швидкість доставки та зменшує ризики, наявні при роботі із кур’єром. Також, дрони можуть використовуватись для відеозйомки, наприклад, для охоронних підприємств.
	На наш погляд, попит щодо сервісу із використанням дронів все ще не задовільнено. Метою цієї роботи є реалізація програмної системи, яка надасть користувачам доступ до оренди дронів, керування дронами, отримування фото та відео записів за допомогою бортових систем.
	Розробка серверної частини програмної ситеми має наступні цілі: забезпечення надійного зберігання та обробки даних, розробка API для взаємодії із клієнтами та IoT приладами, реалізація авторизації та аутентифікації.
	Розробка веб додатку має наступні цілі: розробка інтерфейсу, який буде інтуїтивно зрозумілим та надасть доступ до сервісу усім категоріям користувачів, розробка адміністративної частини системи, що полегшить використання системи адміністраторами. 
	Розробка мобільного додатку має наступні цілі: розробка додатку, що надасть користувачам доступ до зручного управління орендованим дроном.
	Розробка IoT додатку має наступні цілі: розробка системи, що буде ефективно управляти ресурсами дрону та ефективно працювати із даними, що відсилаються на сервер.
 
	1.3	Межі


	Розробка такого сервісу, як програмна система для оренди та керування дронами потребує значних ресурсів, але їх кількість потрібно тримати в певних межах. Окрім ресурсів, існують також інші обмеження.
	Технічні обмеження є невід’ємною частиною розробки будь-якої системи. У випадку програмної системи для оренди та керування дроном, існує велика кількість технічних обмежень.
	По-перше, апаратні ресурси є дефіцитом у такій системі. Програмна система потребує великої кількості трафіку даних для того, щоб підтримувати працездатність. Оскільки, велика кількість пристроїв буде відправляти дані до серверної частини системи.
	По-друге, наявність зв’язку із дроном. Дрон не зможе функціонувати у разі, якщо він не буде мати доступу до інтернету. Потрібно постійно підтримувати зв’язок дрону із серверною частиною програми.
	По-третє, обмеження IoT пристроїв. Пристрої мають дуже обмежені ресурси, через що код, який має працювати на них має бути дуже оптимізованим та правильно використовувати ресурси.
	Також є функціональні обмеження. Це обмеження, що стосуються використання програмної системи деякими користувачами.
	По-перше, географічне обмеження. Користувачі мають бути поблизу від орендованого дрону, аби мати змогу управляти їм, оскільки радіус управління є досить обмеженим.
	По-друге, масштабованість системи. Із збільшенням кількості користувачів, має збільшуватись й кількість дронів, доступних до оренди.
	Також, є правові обмеження, при реалізації системи мають бути враховані правові та нормативні обмеження країн, в яких вона функціонує. Наприклад, захист даних, видалення користувацьких даних, регулювання польотних зон дронів, швидке реагування у разі нових законів.
 
2	ЗАГАЛЬНИЙ ОПИС
2.1	Перспективи ПЗ


	Сфера використання дронів задля потреб бізнесу лише починає розвиватись та набирати оберти. Великі компанії лише починають використовувати дрони задля потреб масового користувача, тому ця сфера є досить актуальною.
	Дрони мають досить широке поле використання, не тільки доставка, але й будь-що, де потрібна відеозйомка із складно досяжних місць. Розміри дронів надають їм перевагу, оскільки їх використання можливе там, куди не зможе потрапити людина.
	Перспективами програмної системи для оренди та керування дронами є велика кількість клієнтів та дронів для оренди. Також, одна з перспектив це стабільність системи. 
	Велика кількість дронів потрібна задля того, щоб, у разі виходу з ладу певної кількості дронів, користувачі мали доступ до сервісу та могли користуватись програмною системою. У разі нестачі дронів для функціонування системи, можуть виникати проблеми із часом очікування дронів.
	Стабільність системи- це основний пріоритет розробки. Оскільки, під час використання системи є велика кількість факторів, які впливають на стабільність системи,  система має враховувати будь-які обставини та повідомляти користувача у разі помилок. Також, програмна система має повідомляти адміністраторов у разі виникнення проблем у користувачів. Користувачі мають мати доступ до технічної підтримки, яка буде в змозі надати кваліфіковану допомогу у разі виникнення будь-яких питань у користувачів.
2.2	Функції ПЗ


	Програмна система для оренди та керування дроном поділена на наступні частини: серверна частина, мобільний додаток, веб додаток та IoT пристрій. Кожна із цих частин має свої певні обов’язки та виконує свої задачі отримую дані із інших частин.
	Серверна частина – це компонент програмної системи, який надає змогу надійно зберігати дані та оброблювати запроси користувачів, це основна частина системи, яка має такі обов’язки, як: обробка користувацьких запросів, зберігання даних, обробка бізнес логіки та підтримка комунікації між іншими частинами системи (Дивитись додаток В).
	Мобільний додаток – це компонент програмної системи, який надає змогу користувачам використовувати сервіс за допомогою мобільного телефону та отримувати зручний інтерфейс. Це основний компонент, який надає сервіс для користувачів.
	Веб додаток – це компонент програмної системи, який надає змогу адміністратором управляти системою за допомогою зручного інтерфейсу, а користувачам отримувати доступ до сервісу на будь-якому пристрої. Основна ціль веб додатку – надати зручний інтерфейс для адміністраторів.
	IoT пристрій – це найважливіший компонент програмної системи, він відповідає за управління дроном, спостереженням стану дрону, обробки критичних помилок при роботі із дроном та відправки даних до серверної частини. Важливо замітити, що код, працюючий на пристрої, має бути гарно оптимізований та використовувати ефективні методи обробки даних, щоб навантаження на серверну частину програмної системи було найменшим.
	Усі перераховані компоненти програмної системи для оренди та керування дроном, працюючи разом, надають змогу користувачам використовувати сервіс. 


	2.3	Характеристики користувачів


	Програмна система для оренди та керування дроном розрахована на декілька типів користувачів. Наприклад, користувачами цієї системи є адміністратори, які керують нею, користувачі, які щоденно орендують дрони, бізнес партнери, які орендують велику кількість дронів задля їх потреб, постачальники дронів та компонентів, які є основними партнерами та інші.
	Програмна система задовольняє потреби широкого спектру користувачів та надає свій сервіс до великої кількості людей. Це дає змогу ефективно працювати та покращувати сервіс.
	Більш детальний опис усіх категорій користувачів наведено у таблиці нижче (Див. табл. 2.3.1).

	Таблиця 2.3.1
Користувач	Основна потреба	Основні вимоги	Основна користь
Прості користувачі	Якісний сервіс щодо орендування дронів та керування	Низька вартість	Основна частина доходу йде від цієї групи користувачів
	Продовження таблиці 2.3.1
Користувач	Основна потреба	Основні вимоги	Основна користь
Бізнес партнери	Велика кількість наявних дронів	Гарні умови для оптових клієнтів	Вони є постійними клієнтами та орендують велику кількість дронів
Адміністратори	Зручний інтерфейс для адміністрування системи. 	Заробітна плата	Керують системою та допомагають розв’язувати проблеми із користувачами
Постачальники дронів	Гарна вартість за дрони та їх компоненти	Постійний попит щодо дронів	Можливість отримати нові дрони у разі потреби

	У таблиці вище було наведено усі типи користувачів, для яких було реалізовано програмну систему для оренди та керування дроном. Усі з описаних груп клієнтів мають власні потреби, вимоги та приносять користь для сервісу. Усі вони є невід’ємною частиною працездатності системи.


	2.4	Загальні обмеження


	Як і у будь-яка система, програмна система для оренди та керування дроном має свої обмеження. Такі обмеження пов’язані із різними факторами, які неможливо змінити. До переліку таких обмежень входять наступні фактори: вартість розробки системи, технічні обмеження пов’язані із IoT пристроями та серверною частиною, функціональні обмеження, користувацькі обмеження, економічні обмеження.
	У таблиці нижче наведено більш детальний опис кожного із обмежень (Див. табл. 2.4.1).

	Таблиця 2.4.1
Тип обмеження	Обмеження	Опис
Економічний	Вартість розробки	Вартість розробки має не перевищувати суму, яка зможе бути окуплена у майбутньому
	Заробітна плата	Для функціонування та підтримку сервісу потрібна постійна команда розробників, тестувальників та адміністраторі. Вартість утримання такої команди повинна не перевищувати 30% від доходу сервісу
	Вартість дрону	Вартість дрону має бути як можна меншою, щоб зменшити вартість користування сервісом та зменшити втрати у разі поломки дрону

	Продовження таблиці 2.4.1
Тип обмеження	Обмеження	Опис
Технічні обмеження	Кількість інтернет трафіку	Задля забезпечення ефективної роботи програмної системи кількість даних, які пересилаються між її компонентами має бути як можна меншою
	Обмеження пристроїв	Оскільки апаратні компоненти дронів мають досить помітні обмеження, код, має бути оптимізованим
Функціональні обмеження	Масштабованість	Система має володіти достатньою кількістю дронів, щоб задовольняти усіх клієнтів.
	Географічні обмеження	Користувачі не можуть використовувати дрони, які знаходяться занадто далеко від них, система має автоматично обирати дрон, який знаходиться найближче до користувача
	Законодавчі обмеження	Система має дотримуватись законів, у регіонах, в яких надає послуги. Наприклад, дотримуватись обмеження польотної зони, обмежень щодо зберігання користувацьких даних та інше
	Обмеження наведені у таблиці 2.4.1 мають вплив на роботу програмної системи та її реалізацію. Усі вимоги обмежень мають бути виконані, щоб система мала змогу ефективно надавати сервіс.


	2.5	Припущення та залежності


	Задля ефективної роботи програмної системи, вона має притримуватись певних припущень та залежностей. Наприклад, різна технічні припущення, функціональні припущення, технічні залежності та інше.
	Програмна система має цілий ряд припущень. Наявність стабільного підключення до інтернету, оскільки дрон має надавати дані до серверної частини. Користувачі будуть використовувати дрон згідно правил експлуатації. Дрони будуть мати регулярне технічне обслуговування, оскільки стан дронів має завжди відповідати стандарту. Користувачі будуть мати базові навики для роботи із дроном.
	Окрім припущень, програмна система має залежності, без яких не зможе ефективно виконувати свої цілі. Такі залежності є факторами, які не можливо змінити. До залежностей входять ряд факторів. Інтернет провайдери, оскільки програмна система має постійно надавати зв’язок між IoT пристроями та серверною частино. Програмні залежності. Наприклад, бібліотеки та фреймворки, які використовуються програмною системою, їх оновлення та помилки в них сильно впливають на стабільність системи. Бізнес партнери та постачальники дронів, оскільки вартість використання сервісу сильно залежить від них. Нормативні залежності. Наприклад, місцеві закони, в регіонах, де програмна система надає свої послуги. Оскільки, сервіс має відповідати вимог місцевої влади. Усі зміни в законах мають вплив на стабільність роботи програмної системи.
 
3	КОНКРЕТНІ ВИМОГИ
3.1	Вимоги до зовнішніх інтерфейсів


Програмна система для оренди та керування дроном має надавати зручний інтерфейс для взаємодії із користувачами. За для цього зовнішні інтерфейси мають відповідати певним стандартам та враховувати користувачів різних груп.
Програмна система має декілька типів інтерфейсів. Інтерфейс користувача, апаратний інтерфейс та програмний інтерфейс. Кожен із них відповідає за зручність використання системи певними типами користувачів.


3.1.1	 Інтерфейс користувача


	Інтерфейс користувача відповідає за зручну комунікацію між програмною системою та декількома типами користувачів. До складу цих користувачів надходять адміністратори, прості користувачі та бізнес партнери.
	Інтерфейс користувача має враховувати користувачів із різними вадами здоров’я, щоб надавати сервіс до як можна більшого кола людей. Для цього використовуються різні набори кольорів, збільшені шрифти та контрастні елементи інтерфейсу [1]. Також для більшої підтримки людей із вадами зору можливо замінювати частину контенту на більш зрозумілу.
	 Для підтримки людей із вадами здоров’я, користувацький інтерфейс мобільного додатку містить більш великі кнопки та збільшений шрифт, для зручнішого використовування сервісу.
	Програмна система для оренди та управління дроном має на меті повністю підтримувати принцип інклюзивності, оскільки це допомагає збільшувати кількість користувачів та надавати сервіс більшому колу людей. Люди із вадами здоров’я можуть мати наступні проблеми: порушення зору, порушення слуху, порушення моторики, проблеми сприйняття. За статистичними даними близько десяти відсотків населення має певні проблеми, які потрібно враховувати при розробці користувацького інтерфейсу [2].


3.1.2	Апаратний інтерфейс


Апаратний інтерфейс – це набір правил щодо взаємодії між різними компонентами програмної системи для оренди та керування дроном. До списку компонентів належать наступні речі: IoT пристрої, серверна частина програмної системи та MQTT брокер.
По-перше, існують певні вимоги до IoT пристроїв, які керують дронами та їх бортовими інструментами. Дрони повинні бути сумісні із серверної частиною, повинні використовуватись моделі, які пройшли тестування та підтримують стандартні протоколи зв’язку. На дроні має бути установлений певний перелік бортових інструментів задля змоги керування їм та відслідковування його статусу. Дрон має бути оснащений GPS датчиком, гіроскопом, акселерометром, камерою, модулями зв’язку 4G та WiFi. Ємність батареї має підтримувати роботу дрону протягом, щонайменше, 3 годин.
По-друге, існують певні вимоги щодо серверної частини. Сервера повинні мати достатньо ресурсів, щоб обробляти запроси великої кількості IoT пристроїв та користувачів. Серверна частина має легко масштабуватись при потребі, наприклад, якщо різко збільшилась кількість користувачів. Серверна частина має підтримувати змогу резервного копіювання даних, у разі критичних проблем.
По-третє, існують певні вимоги щодо IoT-пристроїв. Вони мають підтримувати популярні протоколи зв’язку, наприклад, HTTPS, CoAP, MQTT. Передача даних має відбуватись у зашифрованому вигляді за допомогою SSL. Вони мають підтримувати змогу відкалібрувати та діагностувати датчики встановлені на дроні. Код, який виконується на пристроях, має бути оптимізованим та використовувати ефективні методи обробки даних.
Також, існують вимоги щодо периферійного обладнання. Зарядні станції для дронів мають бути сумісними із різними моделями дронів та підтримувати автоматичну зарядку. Засоби для зберігання та транспортування дронів мають враховувати можливість погіршення погодних умов та надавати достатню безпеку для обладнання.


3.1.3	Програмний інтерфейс


Програмний інтерфейс системи для оренди та керування дронів описує вимоги щодо програмного забезпечення, яку відповідає за взаємодію між різними компонентами, які включають у себе веб додаток, серверну частину та IoT прилади.
По-перше, головний програмний інтерфейс – це API системи. Воно повинно відповідати вимогам RESTful API [3]. RESTful API – це набір правил щодо структури, документації та методів обробки користувацьких запитів.
По-друге, існують інтерфейси для IoT пристроїв. Вони мають під’єднуватись до MQTT брокера та надсилати дані у вигляді Json [4] до серверної частини програми. Вони мають надавати змогу дивитись їх стан у реальному часі та управляти приладами. Мають надавати змогу оновлювати програмне забезпечення віддалено та забезпечувати непереривність роботи.
По-третє, мають підтримуватись інтерфейси для інтеграції із іншими сервісами та бізнесами. Для цього можуть використовуватись системи управління підприємством та системи управління взаємовідносинами з клієнтами для автоматизації бізнес-процесів.
Усі ці вимоги впливають на зручність використання сервісу та привабливість програмної системи для нових користувачів.


3.1.4	Комунікаційний протокол


Комунікаційні протоколи потрібні задля того, щоб забезпечувати безпечний та ефективний обмін даними між клієнтами програмної система та її компонентами.
По-перше, потребує захисту комунікаційний протокол між IoT пристроями та серверною частиною програми, оскільки передаються важливі дані щодо стану дрону та дані користувачів. Для цього використовується MQTT брокер та SSL, що унеможливлює перехват даних при комунікації двох компонентів, дані передаються у вигляді JSON об’ктів. Також, цей тип зв’язку було обрано через легкість його імплементації, ефективність використання ресурсів та низької затримки між передачею та отриманням даних. Схему передачі даних між IoT пристроєм та серверною частиною можна побачити на рисунку нижче (Див. рис. 3.1.1).

 
Рисунок 3.1.1 – Схема комунікацій між IoT та сервером

По-друге, існує комунікація між серверною частиною та клієнтськими частинами. Цей канал зв’язку використовує HTTPS та WebSocket задля ефективної передачі даних поміж компонентами. Дані передаються у вигляді JSON об’єктів.


	3.1.5	Обмеження пам’яті


Обмеження пам’яті для програмної системи оренди та керування дроном стосуються серверної інфраструктури та IoT пристроїв. Ці обмеження стосуються оперативної пам’яті, постійної пам’яті та ефективності роботи програмного продукту.
	Мінімальні вимого щодо оперативної пам’яті серверів, які можуть ефективно оброблювати клієнтські запити сягає 16 гігабайтів SSD (Solid-state drive) пам’яті.
	Мінімальні вимого щодо оперативної пам’яті клієнтських пристроїв, які можуть підтримувати роботу програмної системи сягає 4 гігабайтів. Це обмеження потрібно задля того, щоб програмна система могла працювати без помітних очікувань.
	Мінімальні вимоги щодо оперативної пам’яті IoT пристроїв, які керують дронами, сягають 4 гігабайтів. Цього достатньо, щоб виконувати усі необхідні операції щодо маніпулювання дроном та його бортовими інструментами.
	Мінімальні вимоги щодо постійної пам’яті бази даних можуть сягати кількох терабайт та постійно збільшуються, оскільки з’являються нові користувачі та потрібно зберігати все більше даних.
	3.1.6	Операції


	Програмна система для оренди та керування дроном передбачає певний ряд операцій, які виконуються задля забезпечення сервісу. Ці операції враховують операції, пов’язані із управлінням користувачами, операції, пов’язані із управлінням дронами, та внутрішні операції, пов’язані з обробкою даних та забезпечення безпеки даних.
	Програмна система має ряд користувацьких операцій. Користувач може зареєструватись у системі, авторизуватись, орендувати дрон, управляти дроном, поповнити баланс, отримувати дані орендованого дрону.
	На рисунку нижче можна побачити діаграму прецедентів користувача та адміністратора (Див. рис. 3.1.2).

 
Рисунок 3.1.2 – Діаграма прецедентів користувача та адміністратора

	Також, програмна система має ряд внутрішніх операцій. Вона зберігає дані щодо пересування дронів, зберігає дані щодо дронів, шифрує дані для зберігання, аналізує дані щодо дій користувачів.
	Окрім перерахованих операцій, програмна система має адміністративні операції. Адміністратори сервісу можуть проводити наступні дії:
-	Додавати та видаляти користувачів;
-	Призначати ролі користувачам;
-	Додавати та видаляти дрони;
-	Робити резервне копіювання даних.
На рисунку нижче можна побачити діаграму активності програмної системи (Див. рис. 3.1.3).

 
Рисунок 3.1.3 – Діаграма активності
	3.1.7	Функції ПЗ


	Програмна система для оренди та управління дроном передбачає деякі функції доступних для користувачів. Ці функції забезпечують її повноцінну роботу, зручність для користувачів та ефективне управління ресурсами.
	Користувачі мають змогу використовувати наступні функції: реєструвати нові облікові записи, відновлювати пароль, переглядати список наявних дронів, фільтрувати список дронів, переглядати історію бронювань.
	Адміністратори мають такі функції: управління списком наявних дронів, конфігурація дронів, модерація користувачів, функції управління даними системи.


	3.1.8	Припущення та залежності


	Задля ефективної роботи програмної системи оренди та керування дронів вона має декілька припущень та залежностей. Припущення наявні у системі:
-	Користувач має базові навички керування дроном;
-	Користувач буде використовувати сервіс згідно правил;
-	Користувач має стабільне підключення до інтернету;
Також у системі наявні залежності, без яких неможлива оптимальна робота сервісу. Наступні залежності наявні у системи:
-	Постачальники дронів не будуть різко збільшувати вартість;
-	Законодавство регіонів, в яких працює система;
-	Бібліотеки та фреймворки, які використовує програмна система.


3.2	Властивості ПЗ


Програмна система для оренди та керування дроном володіє рядом властивостей, які забезпечують її функціональність, ефективність та зручність.
По-перше, це широкий спектр функцій. Програмна система надає можливості для орендування, керування та отримання інформації щодо дрону. Надає змогу отримувати фото та відео за допомогою бортових інструментів дрону. Також, користувач має доступ до зручного інтерфейсу роботи із дроном.
По-друге, програмна система розроблена із урахуванням вимог високої доступності, що забезпечує її стабільну роботу навіть при великих навантаженнях. Програмна система має регулярне резервне копіювання для запобігання втрати даних та швидкого відновлення у разі будь-яких проблем.
По-третє, система надає безпеку користувачам, оскільки, використовує шифрування для зберігання даних користувачів та надійні механізми авторизації та аутентифікації.
Також, система пропонує постійну технічну допомогу у разі будь-яких проблем, які можуть виникнути у користувача, та можливість подивитись інструкцію щодо користування сервісом.


3.3	Атрибути ПЗ


Атрибути програмного забезпечення описують ключові характеристики, які визначають якість, функціональність та надійність програмної системи.


	3.3.1	Надійність


	Програмна система для оренди та керування дронів має надавати користувачам надійний сервіс, що функціонує увесь час. Повинно бути враховано балансування навантаження та резервне копіювання системи. Резервне копіювання потрібне для того, щоб у разі можливих аварій відновити збережені данні та не втратити цінну інформацію. Повинно бути реалізовано зручний інтерфейс для моніторингу програмної системи, який буде надавати змогу виявляти потенційні проблеми та запобігати їх розвитку. Також, повинен існувати план аварійного відключення.


	3.3.2	Доступність


	Доступність є основним аспектом, котрий забезпечує гарний досвід користування сервісом. Задля забезпечення доступності було реалізовано наступні речі: розподілена архітектура, балансування навантаження, резервне копіювання даних системи, система сповіщення у разі аварій. Також, окрім технічних аспектів, було реалізовано підтримку інтерфейсу для людей із вадами здоров’я. Будь-яка програмна система має підтримувати принцип інклюзивності, що надає змогу більшому колу користувачів використовувати сервіс.


	3.3.3	Безпека


	Безпека даних користувачів є одним із найважливіших аспектів системи оренди та керування дроном.
	По-перше, в системі існує шифрування даних. Усі конфіденційні данні зберігаються у зашифрованому вигляді задля безпеки користувачів (Див. Додаток Б).
	По-друге, усі комунікації між компонентами системи проводяться у зашифрованому вигляді за допомогою SSL.
	Сервіс має підтримувати закони щодо безпеки даних користувачів у регіонах, в яких надає послуги.

	
	3.3.4	Супроводжуваність


	Супроводжуваність є головним аспектом, який впливає на вартість підтримки програмної системі та частоти її оновлення. До характеристик супроводжуваності входять наступні риси: документація, технічна документація, якість коду, модульна архітектура, автоматизоване тестування. При розробці програмної системи, яка повинна бути підтримуваною протягом довгого часу, мають бути враховані усі перераховані аспекти.
	Задля забезпечення високої якості коду, мають бути проведені регулярні рефакторинги, організовані тренінги для команди розробників.
	Усе це забезпечує високу супроводжуваність програмної системи для оренди та керування дроном та дозволяє її оновлювати та адаптувати відповідно до вимог та змін. На рисунку нижче можна побачити діаграму розгортання системи (Див. рис. 3.3.1).

 
Рисунок 3.3.1 – Діаграма розгортання
	3.3.5	Переносимість


	Програмна система для оренди та керування має підтримувати широкий спектр платформ та можливість працювати на будь-якій системі. Система підтримує роботу мобільного додатку на різних платформах та пристроях, що надає змогу більшому колу користувач використовувати сервіс. Система використовує RESTful API, що полегшує інтеграцію із іншими сервісами та платформами.
	Для розгортування програмної системи на будь-якій платформі використовується технологія контейнеризації, а саме Docker. Також, у системі наявні інструменти для міграції даних, що дозволяє переносити систему між різними середовищами та базами даних.


	3.3.6	Продуктивність

	
	Продуктивність програмної системи є важливою характеристикою сервісу та задоволеності користувачів.
	По-перше, програмна система забезпечує час відклику, який дорівнює 200 мілісекундам, у нормальних умовах. Користувачі не відчувають очікування системи та можуть ефективно працювати із нею.
	По-друге, програмна система в змозі опрацьовувати велику кількість одночасних запитів, що надає доступ великій кількості одночасних користувачів.
	Тестування продуктивності можливо за допомогою навантажувальних тестувань, або стрес тестування. Навантажувальне тестування необхідно для оцінки працездатності системи в умовах великої кількості користувачів та одночасних запросів. Стрес тестування потрібно для оцінки роботи системи в умовах екстремального навантаження, воно позволяє виявити потенційні проблеми та виправити помилки без втрати користувачів.


3.4	Вимоги бази даних


База даних є критичною інфраструктурою будь-якої програмної системи, програмна система для оренди та керування не є виключенням. База даних відповідає за зберігання даних системи та обробку запитів до неї. Також, вона повинна бути оптимізованою для великої кількості об’єктів, мати змогу масштобуватись, бути надійною та відмовостійкою, притримуватись цілісності даних. У програмній системі використовується база даних Microsoft SQL Server 2019, що відповідає усім вимогам щодо бази даних. ER-діаграму бази даних можна побачити в додатку А.


3.5	Інші вимоги


Програмна система для оренди та керування має певний перелік вимог, які мають бути реалізовані. Програмна система має бути кросплатформенною, тобто підтримувати різні типи платформ, як: Windows, Android, iOS. Підтримувати інтернаціоналізацію та локалізацію. Виконувати законадавчі вимоги.
